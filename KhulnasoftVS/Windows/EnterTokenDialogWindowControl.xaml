<UserControl x:Class="KhulnasoftVS.EnterTokenDialogWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"

             toolkit:Themes.UseVsTheme="True"
             mc:Ignorable="d"
             d:DesignWidth="400"
             d:DesignHeight="120"

             Name="EnterTokenDialogWindow">

    <Grid>
        <StackPanel Orientation="Vertical">
            <Label x:Name="lblHeadline"
                   Margin="10, 5"
                   FontSize="16"
                   HorizontalAlignment="Center" >Enter your authentication token:</Label>

            <TextBox x:Name="authTokenInput"
                     Margin="10,0"
                     Padding="0"
                     Height="23"
                     FontSize="12"
                     VerticalContentAlignment="Center"
                     HorizontalContentAlignment="Center"/>

            <TextBlock Margin="10, 14, 10, -40">
                <Hyperlink RequestNavigate="HelpLinkClicked"
                           NavigateUri="https://khulnasoft.com/"
                           FontSize="12">
                    Get your authentication token
                </Hyperlink>
            </TextBlock>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                <Button Content="OK"
                        Click="BtnOKClicked"
                        Width="80"
                        Height="23"
                        Margin="10, 10"
                        Name="button1">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:CommonControlsColors.ButtonDefaultBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderBrush="red" BorderThickness="0">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource {x:Static platformUI:ThemedDialogColors.ActionButtonStrokeHoverBrushKey}}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </Button.Style>
                </Button>

                <Button Content="Cancel"
                    Click="BtnCancelClicked"
                    Width="80"
                    Height="23"
                    Margin="0, 10, 10, 10"
                    Name="button2"/>

            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
